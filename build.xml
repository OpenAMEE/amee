<?xml version="1.0" encoding="UTF-8"?>
<project name="amee" default="run" basedir=".">

    <target name="init">
        <property environment="env"/>
        <property name="amee.home" value="/var/www/apps/amee" description="The root of the AMEE deployment layout."/>
        <property name="amee.current" value="${amee.home}/current" description="The root of the current AMEE package"/>
        <property name="amee.current.lib" value="${amee.current}/lib"
                  description="The location of the AMEE libs and dependencies."/>
        <property name="amee.current.bin" value="${amee.current}/bin"
                  description="The location of the AMEE start scripts."/>
        <property name="amee.shared.lib" value="${amee.home}/shared"
                  description="The location of the AMEE shared config."/>
    </target>

    <target name="rebuild" depends="clean, package, copy-amee-libs"
            description="Perform a clean build from src."/>

    <target name="build" depends="package"
            description="Perform an incremental build from src."/>

    <target name="clean" depends="init"
            description="Clean the deployment lib and target directories.">
        <!-- Clean the amee target dirs. -->
        <exec executable="mvn" dir="server" failonerror="true">
            <!--arg value="-o"/-->
            <arg value="clean"/>
        </exec>
        <!-- Clean the amee deployment lib dir. -->
        <delete>
            <fileset dir="${amee.current.lib}" includes="*.jar"/>
        </delete>
    </target>

    <target name="package"
            description="Run the mvn package goal.">
        <exec executable="mvn" dir="server" failonerror="true">
            <!--arg value="-o"/-->
            <arg value="package"/>
        </exec>
    </target>

    <target name="copy-amee-libs" description="Copy libs to deployment dir.">
        <copy todir="${amee.current.lib}" flatten="true">
            <fileset dir=".">
                <include name="**/amee-*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="copy-wrapper" depends="init"
            description="Copy the AMEE local wrapper.conf to the deployment folder.">
        <copy tofile="${amee.shared.lib}/wrapper.conf" file="server/amee-engine/conf/wrapper.conf.local"
              overwrite="true"/>
    </target>

    <target name="copy-webapps" depends="init"
            description="Copy the AMEE webapp to the deployment folder.">
        <copy todir="${amee.current}">
            <fileset dir=".">
                <include name="webapps/"/>
            </fileset>
        </copy>
    </target>

    <target name="start" depends="init" description="Start AMEE.">
        <exec executable="amee" dir="${amee.current.bin}" failonerror="true">
            <env key="RUN_AS_USER" value="${env.USER}"/>
            <arg value="start"/>
        </exec>
    </target>

    <target name="stop" depends="init" description="Stop AMEE.">
        <exec executable="amee" dir="${amee.current.bin}" failonerror="true">
            <env key="RUN_AS_USER" value="${env.USER}"/>
            <arg value="stop"/>
        </exec>
    </target>

    <target name="run" depends="build, start" description="Make and run AMEE."/>

    <target name="clean-deploy" depends="rebuild, copy-webapps"
            description="Rebuild and deploy AMEE"/>

    <target name="clean-run" depends="copy-wrapper, clean-deploy, stop, start"
            description="Rebuild and restart AMEE."/>

</project>

