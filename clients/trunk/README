AMEECalc readme

This is the AMEE facebook application, written by Marcus Bointon for d::gen network <facebook@amee.cc>

License:

/**
* This file is part of the AMEE php calculator.
*
* The AMEE php calculator is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 3 of the License, or
* (at your option) any later version.
*
* The AMEE php calculator is free software is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
* @package ameecalc
* @author Marcus Bointon for d::gen network http://www.dgen.net <facebook@amee.cc>
* @version $Id: README 1804 2008-04-09 23:55:48Z marcus $
*/

Requirements:

PHP 5.2 or later
Zend Framework (1.5 or later) in your php.ini include path (http://framework.zend.com/)
Access to a database (supplied config is for MySQL)

Installation:

Place all the files somewhere accessible on your web server, and specify the URL for it in the facebook application settings as your callback URL. Also specify URLs for help and remove scripts.

Create a database in MySQL using the supplied schema (schema.sql), create a user with SELECT, INSERT, UPDATE, DROP permissions for it.

Copy the amee.ini.dist and ameecalc.ini.dist files to amee.ini and ameecalc.ini respectively.
Edit the ini files to reflect your database settings, facebook api key and secret, and your amee login details. Set your virtual host to deny access to *.ini files.

It's difficult to test a facebook outside facebook as it applies validation to incoming data using a cryptographic key, however, I've found that PHP error output through the facebook interface works fine. You can also set $amee->debugOn to true to have it log all HTTP requests and responses to a log file called ameecalc.log. (Your web server will need write permission to the app directory for this to work).

The scripts use the Zend_DB component for database abstraction, so it should be possible to switch to a different database back-end simply by changing the database.adapter line in the ini files.

The AMEE PHP class:

This class wraps the AMEE web service and makes it much simpler to write your own AMEE applications. Here is an example of connecting to amee (properties are in the amee.ini file), issuing a get request and parsing the result:

<?php
require 'amee.class.php';

$amee = new AMEE;
$amee->debugOn = true;

try {
	$amee->connect();
} catch(Exception $e) {
	echo "AMEE login failed: ".$e->getMessage();
	exit;
}
$amee->get('/data/home/energy/quantity/drill', array('type' => 'gas'));
$gasuid = (string)$amee->searchResponse("/Resources/DrillDownResource/Choices[Name='uid']/Choices/Choice/Value");

echo "Gas heating UID is: $gasuid\n";
?>